{"cmd": "{\n \"cells\": [\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"class primaclasse:\\n\",\n    \"    '''Ho creato la prima classe'''\\n\",\n    \"    pass\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"class classe2:\\n\",\n    \"\\t\\\"Questa è la mia seconda classe\\\"\\n\",\n    \"\\tx = 24\\n\",\n    \"\\tdef fun(self):\\n\",\n    \"\\t\\tprint('Prova')\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \" \\n\",\n    \"print(classe2.x)\\n\",\n    \"# Output:\\n\",\n    \"# 24   \"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"print(classe2.fun)\\n\",\n    \"# Output:\\n\",\n    \"# <function classe2.fun at 0x0000027A9456B4C8>    \"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"print(classe2.__doc__)\\n\",\n    \"# Output: \\n\",\n    \"#'Questa è la mia seconda classe'    \"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Creare un oggetto della classe2\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"obj = classe2()\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Richiamare la funzione fun()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"obj.fun()\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Output<br>\\n\",\n    \"Prova\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"classe3\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"class cane:\\n\",\n    \"    \\n\",\n    \"    #attributo\\n\",\n    \"    specie = 'mammifero' \\n\",\n    \"    def __init__(self, nome, età=0):\\n\",\n    \"        self.nome = nome\\n\",\n    \"        self.età = età\\n\",\n    \"    def getData(self):\\n\",\n    \"        print(\\\"{} ha {} anni ed è {}\\\".format(self.nome,self.età, self.specie))\\n\",\n    \"    \"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"Pluto = cane('Pluto',8)\\n\",\n    \"Pluto.getData()\\n\",\n    \"# Output:\\n\",\n    \"# Pluto ha 8 anni ed è mammifero\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"Pippo = cane('Pippo')\\n\",\n    \"Pippo.attr = '5 mesi'\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"print((Pippo.nome, Pippo.età, Pippo.attr))\\n\",\n    \"# Output\\n\",\n    \"# ('Pippo', 0, '5 mesi')\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"print(Pluto.attr)\\n\",\n    \"# Output\\n\",\n    \"# 'cane' object has no attribute 'attr'\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"definire nuovi metodi istanza\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \" \\n\",\n    \"class cane:\\n\",\n    \"    \\n\",\n    \"    #attributo\\n\",\n    \"    specie = 'mammifero' \\n\",\n    \"    def __init__(self, nome, età=0):\\n\",\n    \"        self.nome = nome\\n\",\n    \"        self.età = età\\n\",\n    \"    def getData(self):\\n\",\n    \"        print(\\\"{} ha {} anni ed è {}\\\".format(self.nome,self.età, self.specie))\\n\",\n    \"        \\n\",\n    \"    def speak(self, sound):\\n\",\n    \"        return \\\"{} fa {}\\\".format(self.nome, sound)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"Pluto = cane('Pluto', 8)\\n\",\n    \"print(Pluto.speak(\\\"Bau Bau\\\"))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Risultato<br>\\n\",\n    \"Pluto fa Bau Bau\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \" Cancellare oggetti e attributi\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"del Pippo\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Classe Figlia (eredita dalla classe Cane)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"class Labrador(cane):\\n\",\n    \"    def run(self, velocità):\\n\",\n    \"        return \\\"{} corre {}\\\".format(self.nome, velocità)\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Classe Figlia (eredita dalla classe cane)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"class PastoreTedesco(cane):\\n\",\n    \"    def run(self, velocità):\\n\",\n    \"        return \\\"{} corre {}\\\".format(self.nome, velocità)\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Le classi figlie ereditano attributi e <br>\\n\",\n    \"comportamenti dalla classe genitore\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"Tom = PastoreTedesco(\\\"Tom\\\", 4)\\n\",\n    \"Tom.getData()\\n\",\n    \"# Output:\\n\",\n    \"# Tom ha 4 anni ed è mammifero\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Le classi figlie hanno attributi <br>\\n\",\n    \"e comportamenti specifici\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"print(Tom.run(\\\"velocemente\\\"))\\n\",\n    \"# Output:\\n\",\n    \"# Tom corre velocemente\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \" funzione isinstance()\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"E' Tom un'istanza di cane()?\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"print(isinstance(Tom, cane))\\n\",\n    \"# Output:\\n\",\n    \"# True\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"E' Jamie un'instanza di cane()?\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"Jamie = cane(\\\"Jamie\\\", 100)\\n\",\n    \"print(isinstance(Jamie, cane))\\n\",\n    \"# Output:\\n\",\n    \"# True\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"E' Jonny un'istanza di PastoreTedesco()?\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"Jonny = Labrador(\\\"Jonny\\\", 6)\\n\",\n    \"print(isinstance(Jonny, PastoreTedesco))\\n\",\n    \"# Output:\\n\",\n    \"# False    \"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"E' Jamie un'istanza di Tom?\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"print(isinstance(Jamie, Tom))\\n\",\n    \"# Output:\\n\",\n    \"# isinstance() arg 2 must be a type or tuple of types    \"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \" funzione issubclass()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"issubclass(cane,Labrador)\\n\",\n    \"# Output:\\n\",\n    \"# False\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"issubclass(Labrador,cane)\\n\",\n    \"# Output:\\n\",\n    \"# True\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \" Esempio Override<br>\\n\",\n    \"classe cane genitore\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"class cane:\\n\",\n    \"    \\n\",\n    \"    #attributo\\n\",\n    \"    specie = 'mammifero' \\n\",\n    \"    def __init__(self, nome, età=0):\\n\",\n    \"        self.nome = nome\\n\",\n    \"        self.età = età\\n\",\n    \"    def getData(self):\\n\",\n    \"        print(\\\"{} ha {} anni ed è {}\\\".format(self.nome,self.età, self.specie))\\n\",\n    \"        \\n\",\n    \"    def speak(self, sound):\\n\",\n    \"        return \\\"{} fa {}\\\".format(self.nome, sound)\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"classe SiberianHusky figlia\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"class SiberianHusky(cane):\\n\",\n    \"    def getdata(self):\\n\",\n    \"        return \\\"Mi chiamo {}\\\".format(self.nome)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"c = SiberianHusky('Rex')\\n\",\n    \"print(c.getdata())\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Output:<br>\\n\",\n    \"Mi chiamo Rex\"\n   ]\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.6.4\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 2\n}", "cmd_opts": " --cell_id=NONE -s", "import_complete": 1, "terminal": "nvimterm"}